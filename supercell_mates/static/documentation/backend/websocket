Frontend needs to connect websocket to frontend first before sending messages and receiving messages. See testing page for instruction to setup.
Our websocket infrastructure is divided into channel layers. Users of the same chat are in the same layer, and hence can send message to and receive message from one another through the same channel layer.
Each message sent from frontend must have a field called "type", which indicates the type of message being sent. Backend consumer calls the corresponding view name given in the "Response" column to send a new message to the same channel layer. The JSON sent to frontend is then used to render the message with the corresponding type.
For type "file", frontend must first make an HTTP request to upload the file as a message. See API endpoint documentation for details of this HTTP request. The server then generates a file message and returns the message id to frontend. Frontend then needs to inform websocket host that a file message has been generated by sending the message id together with type "file".
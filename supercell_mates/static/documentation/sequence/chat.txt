title Chat

actor User1
participant Frontend1
participant Backend
database Database
participant Frontend2
actor User2

User1->Frontend1:redirect to chat
activate User1
activate Frontend1
Frontend1->Backend:request chat template
activate Backend
Frontend1<--Backend:return chat template
deactivate Backend
User1<--Frontend1:display chat template
opt user 2 redirects to chat page
User2->Frontend2:redirect to chat
activate User2
activate Frontend2
Frontend2->Backend:request chat template
activate Backend
Frontend2<--Backend:return chat template
deactivate Backend
User2<--Frontend2:display chat template
end
Frontend1->Backend:get current chats
activate Backend
Backend->Database:get current chats
activate Database
Backend<--Database:return current chats
deactivate Database
Frontend1<--Backend:return current chats
deactivate Backend
User1<--Frontend1:display current chats
opt user 2 redirected to chat page
Frontend2->Backend:get current chats
activate Backend
Backend->Database:get current chats
activate Database
Backend<--Database:return current chats
deactivate Database
Frontend2<--Backend:return current chats
deactivate Backend
User2<--Frontend2:display current chats
end
Frontend1->Backend:get chats with new messages
activate Backend
Backend->Database:chats with new messages
activate Database
Backend<--Database:chats with new messages
deactivate Database
Frontend1<--Backend:chats with new messages
deactivate Backend
User1<--Frontend1:highlight chats with new messages
opt user 2 redirected to chat page
Frontend2->Backend:get chats with new messages
activate Backend
Backend->Database:chats with new messages
activate Database
Backend<--Database:chats with new messages
deactivate Database
Frontend2<--Backend:chats with new messages
deactivate Backend
User2<--Frontend2:highlight chats with new messages
end

loop user stay in page
alt user open a chat
User1->Frontend1:chat with user 2
User1<--Frontend1:open chat
Frontend1->Backend:websocket with user 2
activate Backend
Backend->Database:check chat existence
activate Database
Backend<--Database:chat exists
deactivate Database
Frontend1<--Backend:websocket connected
Frontend1->Backend:get some past messages
activate Backend
Backend->Database:get some past messages
activate Database
Backend<--Database:return messages
deactivate Database
Frontend1<--Backend:return messages
deactivate Backend
User1<--Frontend1:display messages
loop user stay in chat
opt user 2 connects
User2->Frontend2:chat with user 1
User2<--Frontend2:open chat
Frontend2->Backend:websocket with user 1
Backend->Database:check chat existence
activate Database
Backend<--Database:chat exists
deactivate Database
Frontend2<--Backend:websocket connected
Frontend2->Backend:get some past messages
activate Backend
Backend->Database:get some past messages
activate Database
Backend<--Database:return messages
deactivate Database
Frontend2<--Backend:return messages
deactivate Backend
User2<--Frontend2:display messages
end
alt user send message
alt user send text/post reply
User1->Frontend1:send message
Frontend1->Backend:send message
Backend->Database:add message
activate Database
Backend<--Database:message added
deactivate Database
Frontend1<--Backend:new message
User1<--Frontend1:new message

else user send file
User1->Frontend1:send message
Frontend1->Backend:upload file as message
activate Backend
Backend->Database:add file message
activate Database
Backend<--Database:file message added
deactivate Database
Frontend1<--Backend:file message added
deactivate Backend
Frontend1->Backend:get file message
Frontend1<--Backend:new file message
User1<--Frontend1:new file message
end
opt user 2 in chat
Frontend2<-Backend:new message
User2<-Frontend2: new message
end
Frontend1->Backend:user 1 see message
activate Backend
Backend->Database:user 1 see message
activate Database
Backend<--Database:data added
deactivate Database
Frontend1<--Backend:data added
deactivate Backend
opt user 2 in chat
Frontend2->Backend:user 2 see message
activate Backend
Backend->Database:user 2 see message
activate Database
Backend<--Database:data added
deactivate Database
Frontend2<--Backend:data added
deactivate Backend
end
Frontend1->Backend:get chats with new messages
activate Backend
Backend->Database:chats with new messages
activate Database
Backend<--Database:chats with new messages
deactivate Database
Frontend1<--Backend:chats with new messages
deactivate Backend
User1<--Frontend1:highlight chats with new messages
opt user 2 redirected to chat page
Frontend2->Backend:get chats with new messages
activate Backend
Backend->Database:chats with new messages
activate Database
Backend<--Database:chats with new messages
deactivate Database
Frontend2<--Backend:chats with new messages
deactivate Backend
User2<--Frontend2:highlight chats with new messages
end
else user open group chat settings
User1->Frontend1:open group chat settings
Frontend1->Backend:obtain group chat info
activate Backend
Backend->Database:get group chat info
activate Database
Backend<--Database:return group chat info
deactivate Database
Frontend1<--Backend:return group chat info
deactivate Backend
User1<--Frontend1:display group chat info
loop user stay in group chat settings
alt user add/remove people or admin
User1->Frontend1:add/remove people
Frontend1->Backend:add/remove people
activate Backend
Backend->Database:add/remove people
activate Database
Backend<--Database:people added/removed
deactivate Database
Frontend1<--Backend:people added/removed
deactivate Backend
User1<--Frontend1:people added/removed
else user assign new group chat leader
loop wrong credentials
User1->Frontend1:assign new leader
Frontend1->Backend:assign new leader
activate Backend
activate Backend
Backend->Database:check credentials
activate Database
activate Database
Backend<--Database:wrong credentials
deactivate Database
Frontend1<--Backend:wrong credentials
deactivate Backend
User1<--Frontend1:alert wrong credentials
end
Backend<--Database:correct credentials
deactivate Database
Backend->Database:assign new leader
activate Database
Backend<--Database:new leader assigned
deactivate Database
Frontend1<--Backend:new leader assigned
deactivate Backend
User1<--Frontend1:alert new leader assigned
end
end
end
end
deactivate Backend
deactivate Frontend2
deactivate User2
else user create new group chat
User1->Frontend1:new group chat
User1<--Frontend1:new group chat template
loop invalid details
User1->Frontend1:group chat details
User1<--Frontend1:invalid details
end
Frontend1->Backend:create group chat
activate Backend
Backend->Database:create group chat
activate Database
Backend<--Database:group chat created
deactivate Database
Frontend1<--Backend:group chat created
deactivate Backend
User1<--Frontend1:alert group chat created
end
end